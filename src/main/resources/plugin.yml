name: StorageSlots
version: '2'
main: dev.lsdmc.StorageSlots
api-version: '1.21'
author: PsyChNOdelic
description: Storage system with rank progression

depend: [WorldGuard, PlayerPoints]
softdepend: [Vault, LuckPerms]

commands:
  storage:
    description: Open your storage interface
    usage: /<command>
    aliases: [slots, backpack, bp]
  buystorage:
    description: Purchase a storage slot
    usage: /<command> <slot>
    aliases: [buyslot]
  storagecost:
    description: Set the cost of a storage slot
    usage: /<command> <slot> <cost>
    permission: storageslots.admin
  storagereload:
    description: Reload the plugin configuration
    usage: /<command>
    permission: storageslots.admin
  storagedelete:
    description: Reset storage data for a player or all players
    usage: /<command> <player|all>
    permission: storageslots.admin
    aliases: [slotreset]
  storageadmin:
    description: View and manage a player's storage
    usage: /<command> <player>
    permission: storageslots.admin
    aliases: [slotadmin]
  viewstorage:
    description: View an offline player's storage
    usage: /<command> <player>
    permission: storageslots.admin
    aliases: [viewslots]
  removeslot:
    description: Remove a specific slot from a player
    usage: /<command> <player> <slot>
    permission: storageslots.admin
    aliases: [slotremove]
  giveslot:
    description: Give a specific slot to a player
    usage: /<command> <player> <slot>
    permission: storageslots.admin
    aliases: [slotgive]
  listslots:
    description: List all slots owned by a player
    usage: /<command> <player>
    permission: storageslots.admin
    aliases: [slotstatus]
  togglecooldown:
    description: Toggle withdrawal cooldown bypass for yourself or another player
    usage: /<command> [player]
    permission: storageslots.admin
    aliases: [cooldowntoggle, cooldown]
  testeconomy:
    description: Test PlayerPoints integration and show balance
    usage: /<command>
    permission: storageslots.admin
    aliases: [testpoints, economytest]
  testfallback:
    description: Test PlayerPoints fallback mechanism
    usage: /<command>
    permission: storageslots.admin
    aliases: [testcmd, fallbacktest]
  resetapi:
    description: Reset PlayerPoints API status to working
    usage: /<command>
    permission: storageslots.admin
    aliases: [resetpoints, apireset]
  testnotifications:
    description: Test the notification system and show debug information
    usage: /<command>
    permission: storageslots.admin
    aliases: [testnotify, notificationtest]
  debugsafezone:
    description: Debug safezone detection for current location
    usage: /<command>
    permission: storageslots.admin
    aliases: [safezonetest, debugsafe]

permissions:
  storageslots.use:
    description: Allows using the storage system
    default: true
  storageslots.bypass.rank:
    description: Bypass rank requirements for slots
    default: op
  storageslots.bypass.cost:
    description: Bypass cost requirements for slots
    default: op
  storageslots.bypass.cooldown:
    description: Bypass withdrawal cooldown
    default: op
  storageslots.admin:
    description: Access to administrative commands
    default: op
  storageslots.*:
    description: Grants all StorageSlots permissions
    default: op
    children:
      storageslots.use: true
      storageslots.bypass.rank: true
      storageslots.bypass.cost: true
      storageslots.bypass.cooldown: true
      storageslots.admin: true

  # Donor permissions
  storageslots.donor.supporter:
    description: Supporter donor rank benefits
    default: false
  storageslots.donor.vip:
    description: VIP donor rank benefits
    default: false
  storageslots.donor.mvp:
    description: MVP donor rank benefits
    default: false
  storageslots.donor.king:
    description: King donor rank benefits
    default: false
  storageslots.donor.*:
    description: Grants all donor rank benefits
    default: op
    children:
      storageslots.donor.supporter: true
      storageslots.donor.vip: true
      storageslots.donor.mvp: true
      storageslots.donor.king: true